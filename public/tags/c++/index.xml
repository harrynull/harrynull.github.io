<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>C&#43;&#43; on Harry Yu&#39;s Blog</title>
    <link>http://localhost:1313/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on Harry Yu&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 07 Nov 2018 09:50:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>用C&#43;&#43;实现base64编解码</title>
      <link>http://localhost:1313/posts/base64/</link>
      <pubDate>Wed, 07 Nov 2018 09:50:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/base64/</guid>
      <description>&lt;p&gt;Base64是一种基于64个可打印字符来表示二进制数据的表示方法。由于我好久没写 C++ 了，于是突然一时兴起想要造一个 Base64 编解码的轮子。&lt;/p&gt;</description>
    </item>
    <item>
      <title>不用&#43;实现A&#43;B Problem</title>
      <link>http://localhost:1313/posts/ab-problem/</link>
      <pubDate>Thu, 26 Jul 2018 19:14:40 +0000</pubDate>
      <guid>http://localhost:1313/posts/ab-problem/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Calculate the sum of two integers a and b, but you are not allowed to use the operator + and -.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是来自 leetcode 的一道经典题目——不使用+实现求和。本文将从整数（有符号和无符号）在内存的表现入手并讨论该题解法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>解析int(*((*ptr(int,int))))(int);</title>
      <link>http://localhost:1313/posts/read-c-function/</link>
      <pubDate>Sun, 10 Sep 2017 18:10:40 +0000</pubDate>
      <guid>http://localhost:1313/posts/read-c-function/</guid>
      <description>&lt;p&gt;“顺时针阅读法(&lt;a href=&#34;http://c-faq.com/decl/spiral.anderson.html&#34;&gt;The Clockwise/Spiral Rule&lt;/a&gt;)”是一种很简单方便的用来解析c中复杂类型的方法。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
